plugins {
    id 'java'
    id 'info.solidsoft.pitest' version '1.3.0'
    id 'jacoco'
    id "org.sonarqube" version "2.6.2"
    id "com.alexleventer.slack" version "1.0.3"
}

apply plugin: 'java'
apply plugin: "jacoco"

group 'matrix'
version "$version"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
pitest {
    targetClasses = ['com.example.*']
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("build/customJacocoReportDir")
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("build/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

project.tasks["pitest"].dependsOn "test"
project.tasks["jacocoTestReport"].dependsOn "test"
project.tasks["jacocoTestCoverageVerification"].dependsOn "test"


task generateMatrixAPI (type:Copy) {
    from('build/reports/tests') {
        into 'TestReports'
    }
    from('build/reports/pitest') {
        into 'TestQualityReports'
    }
    from('build/jacocoHtml') {
        into 'TestQualityReports'
    }
    from('build/docs') {
        into 'Documentation'
    }
    from('build/libs') {
        into 'API'
    }
    into "D:\\gradle\\MatrixRelease\\Matrix_v_$version"
}

project.tasks["generateMatrixAPI"].dependsOn "build"

uploadArchives {
    repositories {
        maven {
            credentials {
                username "myMavenRepo"
                password "123456"
            }
            url "https://mymavenrepo.com/repo/QONlMTJzJygT5MfkhM50/"
        }
    }
}

project.tasks["uploadArchives"].dependsOn "generateMatrixAPI"

slack {
    webhookUrl "https://hooks.slack.com/services/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"
    username "Gradle"
    shouldMonitor "uploadArchives"
}
